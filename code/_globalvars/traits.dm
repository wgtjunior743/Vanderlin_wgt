/*
FUN ZONE OF ADMIN LISTINGS
Try to keep this in sync with __DEFINES/traits.dm
quirks have it's own panel so we don't need them here.
*/
GLOBAL_LIST_INIT(traits_by_type, list(
	/mob = list(
		"TRAIT_KNOCKEDOUT" = TRAIT_KNOCKEDOUT,
		"TRAIT_IMMOBILIZED" = TRAIT_IMMOBILIZED,
		"TRAIT_FLOORED" = TRAIT_FLOORED,
		"TRAIT_HANDS_BLOCKED" = TRAIT_HANDS_BLOCKED,
		"TRAIT_RESTRAINED" = TRAIT_RESTRAINED,
		"TRAIT_INCAPACITATED" = TRAIT_INCAPACITATED,
		"TRAIT_BLIND" = TRAIT_BLIND,
		"TRAIT_MUTE" = TRAIT_MUTE,
		"TRAIT_EMOTEMUTE " = TRAIT_EMOTEMUTE,
		"TRAIT_DEAF" = TRAIT_DEAF,
		"TRAIT_NEARSIGHT" = TRAIT_NEARSIGHT,
		"TRAIT_FAT" = TRAIT_FAT,
		"TRAIT_HUSK" = TRAIT_HUSK,
		"TRAIT_DUMB" = TRAIT_DUMB,
		"TRAIT_MONKEYLIKE" = TRAIT_MONKEYLIKE,
		"TRAIT_PACIFISM" = TRAIT_PACIFISM,
		"TRAIT_IGNORESLOWDOWN" = TRAIT_IGNORESLOWDOWN,
		"TRAIT_IGNOREDAMAGESLOWDOWN" = TRAIT_IGNOREDAMAGESLOWDOWN,
		"TRAIT_DEATHCOMA" = TRAIT_DEATHCOMA,
		"TRAIT_FAKEDEATH" = TRAIT_FAKEDEATH,
		"TRAIT_NO_TRANSFORM" = TRAIT_NO_TRANSFORM,
		"TRAIT_STUNIMMUNE" = TRAIT_STUNIMMUNE,
		"TRAIT_SLEEPIMMUNE" = TRAIT_SLEEPIMMUNE,
		"TRAIT_PUSHIMMUNE" = TRAIT_PUSHIMMUNE,
		"TRAIT_STABLEHEART" = TRAIT_STABLEHEART,
		"TRAIT_STASIS" = TRAIT_STASIS,
		"TRAIT_RESISTHEAT" = TRAIT_RESISTHEAT,
		"TRAIT_RESISTHEATHANDS" = TRAIT_RESISTHEATHANDS,
		"TRAIT_RESISTCOLD" = TRAIT_RESISTCOLD,
		"TRAIT_RESISTHIGHPRESSURE" = TRAIT_RESISTHIGHPRESSURE,
		"TRAIT_RESISTLOWPRESSURE" = TRAIT_RESISTLOWPRESSURE,
		"TRAIT_RADIMMUNE" = TRAIT_RADIMMUNE,
		"TRAIT_PIERCEIMMUNE" = TRAIT_PIERCEIMMUNE,
		"TRAIT_NODISMEMBER" = TRAIT_NODISMEMBER,
		"TRAIT_NOFIRE" = TRAIT_NOFIRE,
		"TRAIT_NOGUNS" = TRAIT_NOGUNS,
		"TRAIT_NOHUNGER" = TRAIT_NOHUNGER,
		"TRAIT_NOMETABOLISM" = TRAIT_NOMETABOLISM,
		"TRAIT_TOXIMMUNE" = TRAIT_TOXIMMUNE,
		"TRAIT_EASYDISMEMBER" = TRAIT_EASYDISMEMBER,
		"TRAIT_LIMBATTACHMENT" = TRAIT_LIMBATTACHMENT,
		"TRAIT_NOLIMBDISABLE" = TRAIT_NOLIMBDISABLE,
		"TRAIT_EASYLIMBDISABLE" = TRAIT_EASYLIMBDISABLE,
		"TRAIT_TOXINLOVER" = TRAIT_TOXINLOVER,
		"TRAIT_NOBREATH" = TRAIT_NOBREATH,
		"TRAIT_HOLY" = TRAIT_HOLY,
		"TRAIT_NOAMBUSH" = TRAIT_NOAMBUSH,
		"TRAIT_NOCRITDAMAGE" = TRAIT_NOCRITDAMAGE,
		"TRAIT_NOSLIPWATER" = TRAIT_NOSLIPWATER,
		"TRAIT_NOSLIPALL" = TRAIT_NOSLIPALL,
		"TRAIT_NODEATH" = TRAIT_NODEATH,
		"TRAIT_NOHARDCRIT" = TRAIT_NOHARDCRIT,
		"TRAIT_NOSOFTCRIT" = TRAIT_NOSOFTCRIT,
		"TRAIT_MINDSHIELD" = TRAIT_MINDSHIELD,
		"TRAIT_DISSECTED" = TRAIT_DISSECTED,
		"TRAIT_SIXTHSENSE" = TRAIT_SIXTHSENSE,
		"TRAIT_FEARLESS" = TRAIT_FEARLESS,
		"TRAIT_PARALYSIS_L_ARM" = TRAIT_PARALYSIS_L_ARM,
		"TRAIT_PARALYSIS_R_ARM" = TRAIT_PARALYSIS_R_ARM,
		"TRAIT_PARALYSIS_L_LEG" = TRAIT_PARALYSIS_L_LEG,
		"TRAIT_PARALYSIS_R_LEG" = TRAIT_PARALYSIS_R_LEG,
		"TRAIT_NOMOBSWAP" = TRAIT_NOMOBSWAP,
		"TRAIT_XRAY_VISION" = TRAIT_XRAY_VISION,
		"TRAIT_THERMAL_VISION" = TRAIT_THERMAL_VISION,
		"TRAIT_ABDUCTOR_TRAINING" = TRAIT_ABDUCTOR_TRAINING,
		"TRAIT_ABDUCTOR_SCIENTIST_TRAINING" = TRAIT_ABDUCTOR_SCIENTIST_TRAINING,
		"TRAIT_SURGEON" = TRAIT_SURGEON,
		"TRAIT_STRONG_GRABBER" = TRAIT_STRONG_GRABBER,
		"TRAIT_MAGIC_CHOKE" = TRAIT_MAGIC_CHOKE,
		"TRAIT_SOOTHED_THROAT" = TRAIT_SOOTHED_THROAT,
		"TRAIT_LAW_ENFORCEMENT_METABOLISM" = TRAIT_LAW_ENFORCEMENT_METABOLISM,
		"TRAIT_ALWAYS_CLEAN" = TRAIT_ALWAYS_CLEAN,
		"TRAIT_BOOZE_SLIDER" = TRAIT_BOOZE_SLIDER,
		"TRAIT_UNINTELLIGIBLE_SPEECH" = TRAIT_UNINTELLIGIBLE_SPEECH,
		"TRAIT_DRUQK" = TRAIT_DRUQK,
		"TRAIT_FINGERPRINT_PASSTHROUGH" = TRAIT_FINGERPRINT_PASSTHROUGH,
		"TRAIT_SOUND_DEBUGGED" = TRAIT_SOUND_DEBUGGED,
		//Rogue Traits Past here
		"Blessing of Baotha" = TRAIT_CRACKHEAD,
		"Blessing of Graggar" = TRAIT_ORGAN_EATER,
		"Blessing of Pestra"= TRAIT_ROT_EATER,
		"Blessing of Dendor" = TRAIT_KNEESTINGER_IMMUNITY,
		"Blessing of Necra" = TRAIT_SOUL_EXAMINE,
		"Golden Blood" = TRAIT_SEEPRICES,
		"Of the Cabal" = TRAIT_CABAL,
		"Unleechable" = TRAIT_LEECHIMMUNE,
		"Webwalker" = TRAIT_WEBWALK,
		"Dead Nose" = TRAIT_NOSTINK,
		"High Jumping" = TRAIT_ZJUMP,
		"Jesterophobia" = TRAIT_JESTERPHOBIA,
		"Xenophobia" = TRAIT_XENOPHOBIC,
		"Tolerant" = TRAIT_TOLERANT,
		"Nude Sleeper" = TRAIT_NUDE_SLEEPER,
		"Civilized Barbarian" = TRAIT_CIVILIZEDBARBARIAN,
		"Intimidating" = TRAIT_NOSEGRAB,
		"Nutcracker" = TRAIT_NUTCRACKER,
		"Strong Bite" = TRAIT_STRONGBITE,
		"Ladykiller" = TRAIT_HATEWOMEN,
		"Seed Knower" = TRAIT_SEEDKNOW,
		"Noble Blooded" = TRAIT_NOBLE,
		"Empath" = TRAIT_EMPATH,
		"Battleready" = TRAIT_BREADY,
		"Mail Training" = TRAIT_MEDIUMARMOR,
		"Plate Training" = TRAIT_HEAVYARMOR,
		"Fast Reflexes" = TRAIT_DODGEEXPERT,
		"Villain" = TRAIT_VILLAIN,
		"Critical Resistance" = TRAIT_CRITICAL_RESISTANCE,
		"Critical Weakness" = TRAIT_CRITICAL_WEAKNESS,
		"Awoken" = TRAIT_MANIAC_AWOKEN,
		"Indefatigable" = TRAIT_NOSTAMINA,
		"Fatal Insomnia" = TRAIT_NOSLEEP,
		"Fast Sleeper" = TRAIT_FASTSLEEP,
		"Nudist" = TRAIT_NUDIST,
		"Inhumen Anatomy" = TRAIT_INHUMANE_ANATOMY,
		"Inhumen Digestion" = TRAIT_NASTY_EATER,
		"Minor Fall Damage Immunity" = TRAIT_NOFALLDAMAGE1,
		"Veiled Whispers" = TRAIT_DEATHSIGHT,
		"Cyclops (Left)" = TRAIT_CYCLOPS_LEFT,
		"Cyclops (Right)" = TRAIT_CYCLOPS_RIGHT,
		"Assassin Training" = TRAIT_ASSASSIN,
		"Bardic Training" = TRAIT_BARDIC_TRAINING,
		"Graverobber" = TRAIT_GRAVEROBBER,
		"Once Blessed" = TRAIT_BLESSED,
		"Miracle Foraging" = TRAIT_MIRACULOUS_FORAGING,
		"Missing Nose" = TRAIT_MISSING_NOSE,
		"Disfigured" = TRAIT_DISFIGURED,
		"Bewitched" = TRAIT_SPELLBLOCK,
		"Anti-Magic" = TRAIT_ANTIMAGIC,
		"Anti-Scrying" = TRAIT_ANTISCRYING,
		"Shock Immunity" = TRAIT_SHOCKIMMUNE,
		"Expert Herb Finder" = TRAIT_LEGENDARY_ALCHEMIST,
		"Secret Officiant" = TRAIT_SECRET_OFFICIANT,
		"Deceiving Meekness" = TRAIT_DECEIVING_MEEKNESS,
		"Thieves Guild Member" = TRAIT_THIEVESGUILD,
		"Engineering Goggles" = TRAIT_ENGINEERING_GOGGLES,
		"Sharper Blades" = TRAIT_SHARPER_BLADES,
		"Better Sleep" = TRAIT_BETTER_SLEEP,
		"Exteroception" = TRAIT_EXTEROCEPTION,
		"Blackleg" = TRAIT_BLACKLEG,
		"Eyes of Matthios" = TRAIT_MATTHIOS_EYES,
		"Magical Visions" = TRAIT_SEE_LEYLINES,
		"Poison Bite" = TRAIT_POISONBITE,
		"Tiny" = TRAIT_TINY,
		"Foreigner" = TRAIT_FOREIGNER,
		"Beautiful" = TRAIT_BEAUTIFUL,
		"Bad Mood" = TRAIT_BAD_MOOD,
		"Night Owl" = TRAIT_NIGHT_OWL,
		"Ugly" = TRAIT_UGLY,
		"Hollow Bones" = TRAIT_HOLLOWBONES,
		"Light Load" = TRAIT_AMAZING_BACK,
		"Loved By Kittens" = TRAIT_KITTEN_MOM,
		"Waterbreathing" = TRAIT_WATER_BREATHING,
		"Moonwater Elixir" = TRAIT_MOONWATER_ELIXIR,
		"Violator of the Coven" = TRAIT_VIOLATOR,
		"Endless Slumber" = TRAIT_TORPOR,
		"Boundless Energy" = TRAIT_NOENERGY,
		"Head Butcher" = TRAIT_HEAD_BUTCHER,
	),
	/obj/item/bodypart = list(
		"TRAIT_PARALYSIS" = TRAIT_PARALYSIS
		),
	/obj/item = list(
		"TRAIT_NODROP" = TRAIT_NODROP,
		"TRAIT_NO_TELEPORT" = TRAIT_NO_TELEPORT,
		"TRAIT_WIELDED" = TRAIT_WIELDED,
		"TRAIT_NEEDS_TWO_HANDS" = TRAIT_NEEDS_TWO_HANDS,
		"TRAIT_HARD_TO_STEAL" = TRAIT_HARD_TO_STEAL,
		),
	/atom/movable = list(
		"TRAIT_MOVE_GROUND" = TRAIT_MOVE_GROUND,
		"TRAIT_MOVE_FLYING" = TRAIT_MOVE_FLYING,
		"TRAIT_MOVE_VENTCRAWLING" = TRAIT_MOVE_VENTCRAWLING,
		"TRAIT_MOVE_FLOATING" = TRAIT_MOVE_FLOATING,
		"TRAIT_MOVE_PHASING" = TRAIT_MOVE_PHASING
		),
	))

GLOBAL_LIST_INIT(roguetraits, list(
	TRAIT_WEBWALK = "I can move freely between webs.",
	TRAIT_NOSTINK = span_dead("My nose is numb to the smell of decay."),
	TRAIT_ZJUMP = "Time to reach a new height.",
	TRAIT_JESTERPHOBIA = span_warning("I have a severe irrational fear of Jesters"),
	TRAIT_XENOPHOBIC = span_warning("Lesser races pollute our land"),
	TRAIT_TOLERANT = span_info("I dream of an ideal future, one with peace between all races"),
	TRAIT_NOSEGRAB = "I love to grab idiots by their noses!",
	TRAIT_NUTCRACKER = "I love kicking idiots on the nuts!",
	TRAIT_SEEPRICES = "I can tell the prices of things down to the zenny.",
	TRAIT_STRONGBITE = "Stronger bites, critical bite attacks.",
	TRAIT_HATEWOMEN = "Double damage against female mobs.",
	TRAIT_SEEDKNOW = span_info("I know which seeds grow which crops."),
	TRAIT_NOBLE = span_blue("I'm of noble blood."),
	TRAIT_EMPATH = "I can notice when people are stressed.",
	TRAIT_BREADY = "Defensive stance does not passively fatigue me.",
	TRAIT_MEDIUMARMOR = "I can move freely in medium armor.",
	TRAIT_HEAVYARMOR = "I can move freely in heavy armor.",
	TRAIT_DODGEEXPERT = "I can dodge easily while only wearing light armor.",
	TRAIT_VILLAIN = "I am a devious, conniving villain!",
	TRAIT_CRITICAL_RESISTANCE = "I am resistant to wounds that would be life threatening to others.",
	TRAIT_CRITICAL_WEAKNESS = span_danger("I am weak to wounds that others could survive."),
	TRAIT_MANIAC_AWOKEN = span_danger("I am <b>WAKING UP</b> and the sheeple know this. They will resist."),
	TRAIT_NOSTAMINA = "I have boundless energy, I will never tire.",
	TRAIT_NOSLEEP = span_warning("I can't sleep."),
	TRAIT_NUDIST = "I <b>refuse</b> to wear clothes. They are a hindrance to my freedom.",
	TRAIT_KNEESTINGER_IMMUNITY = "I am immune to the shock of kneestingers.",
	TRAIT_INHUMANE_ANATOMY = "My anatomy is inhumen, preventing me from wearing hats and shoes.",
	TRAIT_NASTY_EATER = span_dead("I can eat bad food, and water that would be toxic to humen will not affect me."),
	TRAIT_NOFALLDAMAGE1 = span_info("I can easily handle minor falls."),
	TRAIT_NOFALLDAMAGE2 = span_info("I can handle a fall from any height."),
	TRAIT_ROT_EATER = span_necrosis("I can eat rotten food."),
	TRAIT_ORGAN_EATER = span_bloody("I can eat organs and raw flesh."),
	TRAIT_CRACKHEAD = span_love("I can use drugs as much as I want!"),
	TRAIT_CIVILIZEDBARBARIAN = span_info("My rigorous training in the martial arts has turned me into a living weapon. No limb is out of reach for my fists and feet, and my unarmed strikes now have a higher chance to inflict critical damage."),
	TRAIT_NUDE_SLEEPER = span_warning("I can't fall asleep unless I'm nude and in bed."),
	TRAIT_SOUL_EXAMINE = span_deadsay("I know when someone's soul has departed after checking their heartbeat."),
	TRAIT_CYCLOPS_LEFT = span_warning("My left eye has been poked out..."),
	TRAIT_CYCLOPS_RIGHT = span_warning("My right eye has been poked out..."),
	TRAIT_LEECHIMMUNE = "Leeches are reluctant to drain my blood.",
	TRAIT_ASSASSIN = "My soul has been tainted by Graggar, god of murder.",
	TRAIT_BARDIC_TRAINING = "Xylixian inspiration grants my songs boons and ailments.",
	TRAIT_GRAVEROBBER = "Necra favors my grim deeds, I can unearth graves without being cursed by her.",
	TRAIT_MISSING_NOSE = span_warning("I struggle to breathe."),
	TRAIT_DISFIGURED = span_warning("No one can recognize me..."),
	TRAIT_BEAUTIFUL = span_love("My face was shaped by the gods!"),
	TRAIT_BAD_MOOD = span_warning("Everything just seems to piss me off"),
	TRAIT_NIGHT_OWL = span_info("I enjoy spending my time in the night"),
	TRAIT_UGLY = span_necrosis("Do not look in the mirror."),
	TRAIT_SPELLBLOCK = span_warning("I cannot cast any spells."),
	TRAIT_ANTIMAGIC = "I am immune to most forms of magic.",
	TRAIT_ANTISCRYING = "I am immune to most forms of magical divination.",
	TRAIT_SHOCKIMMUNE = "I am immune to electrical shocks.",
	TRAIT_INTRAINING = "I'm going to be a knight someday! I can use training dummies more effectively than others.",
	TRAIT_MALUMFIRE = "My hands are blessed by Malum to forge items of superb quality.",
	TRAIT_DEATHSIGHT = span_info("I can feel when someone nearby draws the Undermaiden's attention, a tiny voice whispering 'Someone has died,' in my ear."),
	TRAIT_CABAL = span_purple("In secret, I have studied the ways of Her ascension, and know of others of the Cabal."),
	TRAIT_LEGENDARY_ALCHEMIST = span_info("An expert in the art of finding herbs in the wild."),
	TRAIT_DECEIVING_MEEKNESS = "People look at me and think I am a weakling. They are mistaken.",
	TRAIT_THIEVESGUILD = "I am a member of the thieves guild!",
	TRAIT_LEPROSY = span_necrosis("I'm a disgusting leper..."),
	TRAIT_LIGHT_STEP = span_info("I will never trip a trap plate."),
	TRAIT_NOFIRE = span_info("I am immune to most scorching flames."),
	TRAIT_ENGINEERING_GOGGLES = span_info("I can find out more information from mechanical devices."),
	TRAIT_SHARPER_BLADES = "My weapons lose their sharpness slower.",
	TRAIT_BETTER_SLEEP = "I recover more energy when sleeping.",
	TRAIT_EXTEROCEPTION = "I can see when others are hungry or thirsty.",
	TRAIT_TUTELAGE = "I am a capable tutor to those who apprentice under me.",
	TRAIT_APRICITY = "The warmth of the sun rejuvenates me, allowing me to regain my stamina quicker.",
	TRAIT_BLACKLEG = "I can cheat by rigging coin and dice, and peek at cards.",
	TRAIT_MATTHIOS_EYES = span_notice("I have a sense for what the most valuable item someone has is."),
	TRAIT_CRATEMOVER = "I am able to drag heavy objects without any difficulty.",
	TRAIT_SEE_LEYLINES = "I can see the lines that make up this world.",
	TRAIT_MOONWATER_ELIXIR = span_info("My mind is open, I can understand magic runes."),
	TRAIT_GOOD_SWIM = span_info("I can swim without being slowed and against the flow of rivers."),
	TRAIT_WATER_BREATHING = span_info("I can breathe underwater, I have no fear of drowning."),
	TRAIT_TINY = "I am small, its hard to look people in the eyes.",
	TRAIT_FOREIGNER = span_notice("I'm not from around here."),
	TRAIT_BURDEN = "I carry the Burden of HEAD EATER's hunger...",
	TRAIT_OLDPARTY = "In years long passed, me and a group of fellow adventurers saved this city!",
	TRAIT_DREAM_WATCHER = span_notice("I'm blessed by Noc, my dreams tell more than the average person.."),
	TRAIT_AMAZING_BACK = span_notice("I'm able to carry far more on my back!"),
	TRAIT_HOLLOWBONES = span_danger("My bones are light as air, Its hard to wear armor."),
	TRAIT_RECRUITED = "I have been recruited!",
	TRAIT_RECOGNIZED = span_notice("These people recognize me, my renown has spread from my homeland to this very place."),
	TRAIT_EARGRAB = span_info("I can keep a tight grip on the ear of unruly children."),
	TRAIT_KITTEN_MOM = span_info("Kittens love you, they see you are a parent."),
	TRAIT_FACELESS = span_danger("I am faceless. I am shunned. The others will recognise me for what I am. If I give them the chance."),
	TRAIT_FLOWERFIELD_IMMUNITY = span_info("I am immune to the effects of flower fields."),
	TRAIT_SECRET_OFFICIANT = span_love("I am able to conduct secret wedding ceremonies outside of the church. Love cannot be stopped!"),
	TRAIT_DUALWIELDER = span_info("I am trained in the art of dual wielding."),
	TRAIT_NOENERGY = span_info("I don't need rest; I won't ever feel fatigue.")
))

/// value -> trait name, generated on use from trait_by_type global
GLOBAL_LIST(trait_name_map)

/proc/generate_trait_name_map()
	. = list()
	for(var/key in GLOB.traits_by_type)
		for(var/tname in GLOB.traits_by_type[key])
			var/val = GLOB.traits_by_type[key][tname]
			.[val] = tname

GLOBAL_LIST_INIT(movement_type_trait_to_flag, list(
	TRAIT_MOVE_GROUND = GROUND,
	TRAIT_MOVE_FLYING = FLYING,
	TRAIT_MOVE_VENTCRAWLING = VENTCRAWLING,
	TRAIT_MOVE_FLOATING = FLOATING,
	TRAIT_MOVE_PHASING = PHASING
	))

GLOBAL_LIST_INIT(movement_type_addtrait_signals, set_movement_type_addtrait_signals())
GLOBAL_LIST_INIT(movement_type_removetrait_signals, set_movement_type_removetrait_signals())

/proc/set_movement_type_addtrait_signals(signal_prefix)
	. = list()
	for(var/trait in GLOB.movement_type_trait_to_flag)
		. += SIGNAL_ADDTRAIT(trait)

/proc/set_movement_type_removetrait_signals(signal_prefix)
	. = list()
	for(var/trait in GLOB.movement_type_trait_to_flag)
		. += SIGNAL_REMOVETRAIT(trait)
